https://www.youtube.com/watch?v=1Rs2ND1ryYc&t=3582s

1>element selector
like 'body'
like 'a'

2>class selector
.class_selector {
  color : red;
}

3>id selector
#id_selector {
  color : red;
}

4>psuedo selector

/* Selects the second <li> element in a list */
li:nth-child(2) {
  color: lime;
}

a:hoover     (a tag element)
a:link
a:visited

.link_class:hoover     (link_class is class)
.link_class:link
.link_class:visited

5>advanced selector 1

h1 + h2  (select h2 below h1)

-----------------------------------------
<ul>
   <li>1</li>
   <li>2</li>
   <li>
       <ul>
           <li>3</li>
       </ul>
   </li>
</ul>

ul > li (select all li children of ul)
it will select 1,2

ul li (select all decendant of ul)
it will select 1,2,3

-----------------------------------------

/*
1>hide all p element children of .test_visible class
2>color red all p element descendant of .test_visible class
*/
		 .test_visible > p
		 {
			display: none;
		 }
		 .test_visible p
		 {
			color: red;
		 }	
     
<div class="test_visible">
	<a href="https://02dfa05.netsolhost.com/erie/email/S1174_WhatWorks_x3-20210526092946.pdf#zoom=100" target="new"><p style="font-size:20px;" >show me</p></a>
	<p style="font-size:20px;" >hide me 2</p>
	<p style="font-size:20px;" >hide me 3</p>
	<p style="font-size:20px;" >hide me 4</p>
</div>

////////////////////////////////////////////

6>attribute selector

//select attribute 'class=subtitle' of h2 element
h2[class=subtitle] {
    color = blue;
}

(1:03:01 https://www.youtube.com/watch?v=1Rs2ND1ryYc&t=3586s)
// ^= select all img begin with "../img/" like regex
img[src^="../img/"] {
    border = 10px solid black;
}

// $= select all img ends with ".png"
img[src$=".png"] {
    border = 10px solid black;
}

// *= select all img contains "../img/"
img[src*="../img/"] {
    border = 10px solid black;
}

<img src="../img/test.png"> 
<img src="../img/test2.png"> 

////////////////////////////////////////////

////////////////////////////////////
//////////////////////////////

.col-md-12 {
	color = black;
}
.homeBottomContainer {
	margin-left:15px;
}
.hello {
	font-weight:bold;
}

// you can specify multiple class

<div class="col-md-12 homeBottomContainer hello" style="position: absolute; bottom: 10px; right: 0; left: 0;">

/////////////////////////////

selector {
	property1: value1;
	proprerty2: value2;
}

//////////////////////////////
//////////////////////////////

https://www.rapidtables.com/web/css/css-color.html
https://htmlcolorcodes.com/color-picker/

css color codeRed colors
Orange colors
Yellow colors
Green colors

CSS color
Hex format: #rrggbb
RGB format: rgb(red, green, blue)
Name format: name

For orange color:
Hex format: #FFA500
RGB format: rgb(255,165,0)
Name format: orange

<element style="color: code;"></element>

<style>
   element { color: code; }
</style>

//////////////////////////////
//////////////////////////////


/////////////////////////////////
///////////////////////////////////

https://htmlcolorcodes.com/color-picker/
just use verticle bar to pick colors

always start with these basic color and use verticle bar

red
hex value = #FF0000
RGB value = (255.0.0)

green
hex value = #00FF00
RGB value = (0.255.0)

blue
hex value = #0000FF
RGB value = (0.0.255)

/////////////////////////////////
///////////////////////////////////

https://www.youtube.com/watch?v=1Rs2ND1ryYc&t=3586s

// set color of text to blue for element with id=title
#title {
	color : #0000FF;       <-- but in reality, i see this all the time
	color : rgb(0.0.255);  <--  youtube says use this
}

in fact rgb is better, because if i feel i need more blue color, then i add
rgb(0.0.50)
rgb(0.0.100)  <- i added more 50 to blue
rgb(0.0.150}  <- i added more 50 to blue again
rgb(0.0.200}  <- i added more 50 to blue again again
rgb(0.0.255}  <- i added more 50 to blue again again, max out 255

/////////////////////////////////
///////////////////////////////////

selector {
	color: rgb(0.0.50);  		// color of text
	background: black;			// preferable, because apply to image too
	background-color: black;	// background color of text
}

//this rgb() is css function
body {
	background: rgb(0.0.50);	// preferable, because apply to image too
}

/////////////////////////////////
///////////////////////////////////

image and url in css
(1:39:01 https://www.youtube.com/watch?v=1Rs2ND1ryYc&t=3586s)

body {
	background: url("<http url>");	// preferable, because apply to image too
	background: url("../img/background.png");
	background-image: url("../img/background.png");
}

----------------------------------

//img with id=service-image
<div id="service-image"></div>

#service-image {
	height: 50;
	width: 100px;
	background-color: black;
	background-image: url("../img/background.png");
	background-repeat: no-repeat;
	background-size: 50px 100px;	//height then width
	background-size: cover;			//clipped image cover div
	background-size: contain;		//full image contained in div
}

/////////////////////////////////////
/////////////////////////////////////

/////////////////////////////////
////////////////////////////////

opacity and transparency

(1:50:01 https://www.youtube.com/watch?v=1Rs2ND1ryYc&t=3586s)

rgba(0,0,150,0.5)
{
    background: #000096;
    opacity: 0.5;
}

RGBA is a type of CSS color value that allows us to set a color and also its opacity/transparency
RGB is a three-channel format containing data for Red, Green, and Blue. RGBA is a four-channel format containing data for Red, Green, Blue, and an Alpha value.

/*
alpa is transparency and opacity.  range from 0 to 1
0 = is fully transparent, cant see at all
1 = is fully opacity, can see
it is good way to make color lighter or darker by adjusting alphha
*/
body {
	background: rgba(0,0,150,0.5)  // 0.5 is alpha,
}

/////////////////////////////
////////////////////////////////

(1:54:01 https://www.youtube.com/watch?v=1Rs2ND1ryYc&t=3586s)

gradient = transition to number of colors
two type of gradient = radial and linear

// top, right, left, bottom
body {
	background: linear-gradient(to right, red, blue, black);
	background: linear-gradient(to right, rgba(0,0,150,1), rgba(0,0,150,0));  // fading blue color
	background: linear-gradient(to bottom right, rgba(0,0,150,1), rgba(0,0,150,0));  // fading blue color
}

//angle position 160deg
body {
	background: linear-gradient(160deg, rgba(0,0,150,1), rgba(0,0,150,0));  // fading blue color
}

//you need to start small % at start and end large % in last	
body {
	//default shape is oval
	background: radial-graident(red 20%, green 40%, blue 50%);
	background: radial-graident(circle, red 20%, green 40%, blue 50%);
}

/////////////////////////////
////////////////////////////////




