
            IFS="=" arrToken=($cleanLine)
            key="@$(echo -e "${arrToken[0]}" | sed -e 's/[[:space:]]*$//')@"
            value="$(echo -e "${arrToken[1]}" | sed -e 's/^[[:space:]]*//')"
            if [[ $value == *"~"* ]]; then
               # escape ~ characters in value for sed token replacement
               if [[ "$veryVerbose" == "on" ]]; then
                   echo "token file token -> $key will have ~ character escaped in value $value"
               fi
               value=${value//\~/\\~}
            fi
            tokens[$key]="${value}"

-------------------------------

        # Do the token replacement for the candidate files
        #
        candidateIdx=0
        for candidate in "${finalCandidates[@]}"; do
            candidateIdx=$(expr $candidateIdx + 1)
            if [[ "$verbose" == "on" ]]; then
                echo "    Replacing tokens in candidate[${candidateIdx}] = ${candidate}"
            fi
            sed -b -f ${sedFile} -i ${candidate}
        done

/////////////////////////

sed --debug -b -f ${sedFile} -i ${candidate}

sed --debug -b -f C:/Temp/target/tmp/test.sed -i C:/Temp/target/tmp/index.jsp

test.sed contains
s~@jdbc.password@~aoha~g

which parse from environment.properties
password=aoha

sed --debug -b -e "s~@password@~aoha~g" -i C:/Temp/target/tmp/index.jsp



