Log4J Levels: ALL > TRACE > DEBUG > INFO > WARN > ERROR > FATAL > OFF

https://jessehu.wordpress.com/2009/11/17/log4j-levels-all-trace-debug-info-warn-error-fatal-off/

DEBUG – The DEBUG Level designates fine-grained informational events that are most useful to debug an application. 
INFO – The INFO level designates informational messages that highlight the progress of the application at coarse-grained level. 
WARN – The WARN level designates potentially harmful situations. 
ERROR – The ERROR level designates error events that might still allow the application to continue running.

TRACE – The TRACE Level designates finer-grained informational events than the DEBUG 
FATAL – The FATAL level designates very severe error events that will presumably lead the application to abort. 
In addition, there are two special levels of logging available: (descriptions borrowed from the log4j API http://jakarta.apache.org/log4j/docs/api/index.html): 
ALL -The ALL Level has the lowest possible rank and is intended to turn on all logging. 
OFF – The OFF Level has the highest possible rank and is intended to turn off logging.

////////

https://examples.javacodegeeks.com/enterprise-java/log4j/log4j-log-levels-example/


<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">
<log4j:configuration debug="false" xmlns:log4j="http://jakarta.apache.org/log4j/">
 
    <appender name="console" class="org.apache.log4j.ConsoleAppender">
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n" />
        </layout>
    </appender>
     
    <!-- Foo package -->
    <logger name="com.javacodegeeks.examples.log4jlevels.foo">
        <level value="INFO" />
        <appender-ref ref="console" />
    </logger>
     
    <!-- Bar package -->
    <logger name="com.javacodegeeks.examples.log4jlevels.bar">
        <level value="WARN" />
        <appender-ref ref="console" />
    </logger>
    
    <!-- Root logger option -->
    <root>
        <level value="DEBUG" />
        <appender-ref ref="console" />
    </root>
</log4j:configuration>

//////////

package com.javacodegeeks.examples.log4jlevels.foo;
import org.apache.log4j.Logger;
public class FooBean {
    private static final Logger logger = Logger.getLogger(FooBean.class);
    public void sayHello() {
        logger.debug("Hello there from FooBean class!");
        logger.info("Hello there from FooBean class!");
    }
}

package com.javacodegeeks.examples.log4jlevels.bar;
import org.apache.log4j.Logger;
public class BarBean {
    private static final Logger logger = Logger.getLogger(BarBean.class);
    public void sayHello() {
        logger.info("Hello there from BarBean class!");
        logger.warn("Hello there from BarBean class!");
    }
}
